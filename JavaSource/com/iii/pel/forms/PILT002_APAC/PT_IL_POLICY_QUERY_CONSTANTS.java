package com.iii.pel.forms.PILT002_APAC;

public interface PT_IL_POLICY_QUERY_CONSTANTS {
    
    //For predelete
    
    String preDeletePT_IL_POL_CHARGE =" DELETE FROM PT_IL_POL_CHARGE P WHERE P.POC_POL_SYS_ID = ? ";
    
    String preDeletePT_IL_POL_CONDITION   = " DELETE FROM PT_IL_POL_CONDITION P WHERE P.PLCOND_POL_SYS_ID = ?; " ;
    
    String preDeletePT_IL_SURR_MAT_VALUES   = " DELETE FROM PT_IL_SURR_MAT_VALUES P WHERE P.SMV_POL_SYS_ID = ?; " ;
   
    String preDeletePT_IL_POL_BROKER_HEAD   = "DELETE FROM PT_IL_POL_BROKER_HEAD P WHERE P.POBH_POL_SYS_ID = ?";
    
    String preDeletePT_IL_UNPAID_PREM_DTLS   ="DELETE FROM PT_IL_UNPAID_PREM_DTLS P WHERE P.UPD_POL_SYS_ID = ? ";
   
    String preDeletePT_IL_DOC_TODO_LIST_STATUS   = "DELETE FROM PT_IL_DOC_TODO_LIST_STATUS P WHERE P.DTLS_POL_SYS_ID = ? and P.DTLS_END_NO_IDX = ? ";
   
    String preDeletePT_IL_POLICY   = "DELETE FROM PT_IL_POLICY P WHERE P.POL_SYS_ID = ? ";
 
    String preDeletePT_IL_POL_STATUS   =" DELETE FROM PT_IL_POL_STATUS P  WHERE P.PS_POL_SYS_ID = ?";
 
 //   String preDeletePT_IL_POL_STATUS   =" DELETE FROM PT_IL_POL_STATUS P WHERE P.PS_POL_SYS_ID = ?";
  
    String preDeletePT_IL_POL_BENEFICIARY   = "DELETE FROM PT_IL_POL_BENEFICIARY P WHERE P.PBEN_POL_SYS_ID = ?";
  
    String preDeletePT_IL_POL_DISC_LOAD   = "DELETE FROM PT_IL_POL_DISC_LOAD P  WHERE P.PDL_POL_SYS_ID = ? ";
   
    String preDeletePT_IL_POL_ASSURED_DTLS   = "DELETE FROM PT_IL_POL_ASSURED_DTLS P  WHERE P.POAD_POL_SYS_ID = ?";
  
    String preDeletePT_IL_POL_FUND_DTL   = "DELETE FROM PT_IL_POL_FUND_DTL P  WHERE P.POFD_POL_SYS_ID = ?";
  
 //   String preDeletePT_IL_POL_STATUS   ="DELETE FROM PT_IL_POL_STATUS P WHERE P.PS_POL_SYS_ID = ?";
  
    String preDeletePT_IL_POL_ASSR_MED_HIST   = "DELETE FROM PT_IL_POL_ASSR_MED_HIST P  WHERE P.PAMH_POL_SYS_ID = ?";
  
    String preDeletePT_IL_POL_SA_INST_PYMT_HEAD   ="DELETE FROM PT_IL_POL_SA_INST_PYMT_HEAD P WHERE P.SIPH_POL_SYS_ID = ?";
  
    // For LOV
    
    String POL_CONT_CODE_QUERY = " SELECT CONT_CODE,CONT_NAME FROM PM_IL_CONTRACTOR WHERE CONT_FRZ_FLAG='N' AND ROWNUM<=? ORDER BY 1 ";
 
    /*
     * 
     * commented by Ameen for lov lower case issue ssp call id FALCONLIFE-1344105
     * 
     * 
     * String POL_CONT_CODE_QUERY_LIKE = " SELECT CONT_CODE,CONT_NAME FROM PM_IL_CONTRACTOR WHERE CONT_FRZ_FLAG='N'" +
    				"  AND (CONT_CODE LIKE ? OR  CONT_NAME LIKE ?) AND ROWNUM<=? ORDER BY 1 ";*/
    
    /*Added by Ameen for lov lower case issue ssp call id FALCONLIFE-1344105*/
    
    String POL_CONT_CODE_QUERY_LIKE = " SELECT CONT_CODE,CONT_NAME FROM PM_IL_CONTRACTOR WHERE CONT_FRZ_FLAG='N'" +
			"  AND ( UPPER(CONT_CODE) LIKE  UPPER(?) OR   UPPER(CONT_NAME) LIKE  UPPER(?)) AND ROWNUM<=? ORDER BY 1 ";
    
    /*End*/
    
    String POL_CUSTOMER_LOV_QUERY = "SELECT CUST_CODE,CUST_NAME,CUST_BL_NAME "
	    + " FROM PM_CUSTOMER WHERE CUST_CLASS IN "
	    + " (SELECT CCLAS_CODE FROM PM_CUST_CLASS, PP_SYSTEM "
	    + " WHERE DECODE(PS_VALUE,2,CCLAS_CODE, CCLAS_TYPE) IN "
	    + " (?)) AND CUST_FRZ_FLAG = 'N' AND (CUST_APPL_ALL_BRAN_YN = 'Y'"
	    + " OR CUST_CODE IN "
	    + " (SELECT CDIV_CUST_CODE FROM PM_CUST_DIVN "
	    + " WHERE CDIV_DIVN_CODE = NVL (?, CDIV_DIVN_CODE))) and ROWNUM < 25 order by 1";
    
    /*changed by raja on 02-06-2017 for hanends on points*/
    
   /* String POL_ASSRD_REF_ID1_QUERY = "SELECT CUST_REF_ID1,CUST_NAME FROM PM_CUSTOMER " +
    		"WHERE UPPER(CUST_CODE) LIKE UPPER('IND%') AND ROWNUM <= ? AND CUST_REF_ID1 IS NOT NULL ORDER BY 1";*/
    
    /*String POL_ASSRD_REF_ID1_QUERY = "SELECT CUST_REF_ID1,CUST_NAME FROM PM_CUSTOMER WHERE UPPER(CUST_CODE) LIKE UPPER('IND%')"
    		+ " AND ROWNUM <= ? AND CUST_REF_ID1 IS NOT NULL ORDER BY 1";*/
    
    /*String POL_ASSRD_REF_ID1_QUERY = "SELECT CUST_REF_ID1,CUST_NAME FROM PM_CUSTOMER WHERE UPPER(CUST_CLASS) IN ('INDL')"
    		+ " AND ROWNUM <= ? AND CUST_REF_ID1 IS NOT NULL ORDER BY 1";*/
    
    /*end*/
    /*Added by Sivarajan on 29/09/2019 for sarwa GL*/
    String POL_ASSRD_REF_ID1_QUERY = "SELECT CUST_REF_ID1,CUST_NAME FROM PM_CUSTOMER WHERE "
    		+ "ROWNUM <= ? AND CUST_REF_ID1 IS NOT NULL ORDER BY 1";
    /*End*/
  /*  added by gopi for toi on 04/06/2018*/

    String POL_ASSRD_REF_ID2_QUERY = "SELECT CUST_REF_ID1,CUST_NAME FROM PM_CUSTOMER,PM_IL_PRODUCT WHERE UPPER(CUST_CLASS) IN ('INDL')"
    		+ " AND ROWNUM <=? AND CUST_REF_ID1 IS NOT NULL AND CUST_MAIN_MEM_CODE =? AND PROD_CODE =? ORDER BY 1" ;
    
   /* end*/
    
    
    
    
    
    /*
     * 
     *commented by Ameen for lov lower case issue ssp call id FALCONLIFE-1344105 
     * 
     * String POL_ASSRD_REF_ID1_QUERY_LIKE = "SELECT CUST_REF_ID1,CUST_NAME FROM PM_CUSTOMER " +
	"WHERE (CUST_REF_ID1 LIKE ? OR CUST_NAME LIKE ?) AND CUST_REF_ID1 IS NOT NULL AND ROWNUM <= ? ORDER BY 1";*/
    
    /*Added by Ameen for lov lower case issue ssp call id FALCONLIFE-1344105*/
    
    /*changed by raja on 02-06-2017 for hanends on points*/
    /*String POL_ASSRD_REF_ID1_QUERY_LIKE = "SELECT CUST_REF_ID1,CUST_NAME FROM PM_CUSTOMER " +
    		"WHERE (UPPER(CUST_REF_ID1) LIKE UPPER(?) OR UPPER(CUST_NAME) LIKE UPPER(?)) AND CUST_REF_ID1 IS NOT NULL AND ROWNUM <= ? ORDER BY 1";*/
    /*String POL_ASSRD_REF_ID1_QUERY_LIKE = "SELECT CUST_REF_ID1,CUST_NAME FROM PM_CUSTOMER WHERE (UPPER(CUST_REF_ID1) LIKE UPPER(?) OR UPPER(CUST_NAME) "
    		+ "	LIKE UPPER(?)) AND CUST_REF_ID1 IS NOT NULL AND UPPER(CUST_CODE) LIKE UPPER('IND%') AND ROWNUM <= ? ORDER BY 1";*/
    /*Modified by sivarajan for sarwa gl on 14/08/2019*/
    String POL_ASSRD_REF_ID1_QUERY_LIKE = " SELECT NVL(CUST_REF_ID1,CUST_ROC_NO) CUST_REF_ID1 , CUST_NAME FROM PM_CUSTOMER WHERE (UPPER(CUST_REF_ID1) LIKE UPPER(?) OR UPPER(CUST_NAME) "
    		+ " LIKE UPPER(?))  AND ROWNUM <= ? ORDER BY 1";
    /*End*/
    /*end*/
    
    
  /*  added by gopi for toi on 04/06/2018*/
    
    String POL_ASSRD_REF_ID2_QUERY_LIKE = " SELECT CUST_REF_ID1,CUST_NAME FROM PM_CUSTOMER, PM_IL_PRODUCT WHERE (UPPER(CUST_REF_ID1) LIKE UPPER(?)"
    		+ " OR UPPER(CUST_NAME) LIKE UPPER(?)) AND CUST_REF_ID1 IS NOT NULL AND UPPER(CUST_CLASS) IN ('INDL') AND ROWNUM <= ?"
    		+ " AND CUST_MAIN_MEM_CODE =?  AND PROD_CODE =? ORDER BY 1";
    //end
    
    
    
    
    
    /*end*/
    
    /*Added by saritha on 20-02-2017 for RM018T - DEV_IL_ZB Life_027-Replacement Policy */
    String POBH_ORI_AGENT_CODE_QUERY = "SELECT CUST_CODE,CUST_NAME FROM PM_CUSTOMER WHERE CUST_CLASS IN (SELECT PS_CODE_DESC FROM CUSTLOV WHERE PS_CODE = 'IL_BROKER') AND ROWNUM<= ? ORDER BY 1";
    String POBH_ORI_AGENT_CODE_QUERY_LIKE = "SELECT CUST_CODE,CUST_NAME FROM PM_CUSTOMER WHERE CUST_CLASS IN (SELECT PS_CODE_DESC FROM CUSTLOV WHERE PS_CODE = 'IL_BROKER') AND ( UPPER(CUST_CODE) LIKE  UPPER(?) OR UPPER(CUST_NAME) LIKE  UPPER(?))AND ROWNUM <= ? ORDER BY 1";
    
    String POBH_ORI_POL_NO_QUERY = "SELECT POL_NO,POL_ASSURED_NAME FROM PT_IL_POLICY WHERE POL_STATUS = 'A' AND POL_REPL_POLICY_YN = 'N' AND POL_SRC_OF_BUS = '075' AND ROWNUM<= ? ORDER BY 1";
    String POBH_ORI_POL_NO_QUERY_LIKE = "SELECT POL_NO,POL_ASSURED_NAME FROM PT_IL_POLICY WHERE POL_STATUS = 'A' AND POL_REPL_POLICY_YN = 'N' AND POL_SRC_OF_BUS = '075' AND ( UPPER(POL_NO) LIKE  UPPER(?) OR UPPER(POL_ASSURED_NAME) LIKE  UPPER(?)) AND ROWNUM <= ? ORDER BY 1";
    /*End*/
    
    /*added by raja on 11-04-2017 for for beneficiary identification number*/
  /*  
   * 
   * commented by dhinesh on 09-03-2018
   * 
   * String BANK_REF_ID1_QUERY="SELECT CUST_ROC_NO DB_CODE,CUST_NAME DB_VALUE FROM PM_CUSTOMER,PM_CUST_CLASS "
    		+ "WHERE CUST_CLASS = CCLAS_CODE AND CCLAS_TYPE = 011 UNION "
    		+ "SELECT BANK_UNIVERSAL_CODE DB_CODE,BANK_NAME DB_VALUE FROM FM_BANK";*/
    
   /* String BANK_REF_ID1_QUERY="SELECT CUST_ROC_NO DB_CODE,CUST_NAME DB_VALUE FROM PM_CUSTOMER,PM_CUST_CLASS "
    		+ "WHERE CUST_CLASS = CCLAS_CODE AND CCLAS_TYPE = 011 UNION "
    		+ "SELECT BANK_UNIVERSAL_CODE DB_CODE,BANK_NAME DB_VALUE FROM FM_BANK where ROWNUM <= ? ORDER BY 1";*/
    
    /*
     * 
     * commented by dhinesh on 09-03-2018 suggested by ajoy 
     * 
     * String BANK_REF_ID1_QUERY_LIKE="SELECT CUST_ROC_NO DB_CODE,CUST_NAME DB_VALUE FROM PM_CUSTOMER,PM_CUST_CLASS "
    		+ "WHERE CUST_CLASS = CCLAS_CODE AND CCLAS_TYPE = 011 UNION "
    		+ "SELECT BANK_UNIVERSAL_CODE DB_CODE,BANK_NAME DB_VALUE FROM FM_BANK "
    		+ "WHERE (UPPER(BANK_UNIVERSAL_CODE) LIKE UPPER(?) OR UPPER(BANK_NAME) LIKE UPPER(?)) AND ROWNUM <= ? ORDER BY 1";*/
    //COMMENTED BY GOPI
    /*String BANK_REF_ID1_QUERY="SELECT TRIM(CUST_REF_ID1) DB_CODE, CUST_NAME DB_VALUE  FROM PM_CUSTOMER, PM_CUST_CLASS WHERE CUST_CLASS = CCLAS_CODE "
    		+ "  AND CCLAS_TYPE <> '002'   AND NVL(CUST_FRZ_FLAG, 'N') = 'N'  and ROWNUM <=  ? UNION SELECT BANK_CODE DB_CODE,BANK_NAME DB_VALUE FROM FM_BANK where ROWNUM <= ? ORDER BY 1";*/

    String BANK_REF_ID1_QUERY="SELECT TRIM(NVL(CUST_REF_ID1,CUST_ROC_NO)) DB_CODE, CUST_NAME DB_VALUE "
    		+ "FROM PM_CUSTOMER, PM_CUST_CLASS WHERE CUST_CLASS = CCLAS_CODE AND NVL(CUST_FRZ_FLAG, 'N') = 'N' "
    		+ "AND ROWNUM <= ? UNION SELECT BANK_CODE DB_CODE,BANK_NAME DB_VALUE FROM FM_BANK where ROWNUM <=?"
    		+ " ORDER BY 1";

    
    /*
     * QUERY MODIFIED BY AMEEN ON 10-03-2018
     * String BANK_REF_ID1_QUERY_LIKE="SELECT TRIM(CUST_REF_ID1) DB_CODE, CUST_NAME DB_VALUE  FROM PM_CUSTOMER, PM_CUST_CLASS	  WHERE CUST_CLASS = CCLAS_CODE"
    		+ "  AND CCLAS_TYPE <> '002'  AND NVL(CUST_FRZ_FLAG, 'N') = 'N'  AND UPPER(CUST_REF_ID1) LIKE UPPER(?)"
    		+ "  AND UPPER(CUST_NAME) LIKE UPPER(?)  AND ROWNUM <= ? UNION	 SELECT BANK_CODE DB_CODE,BANK_NAME DB_VALUE FROM FM_BANK"
    		+ "	 WHERE  UPPER(BANK_CODE) LIKE UPPER(?)   AND UPPER(BANK_NAME) LIKE UPPER(?)   AND ROWNUM <= ?";*/
    //COMMENTED BY GOPI
    /*String BANK_REF_ID1_QUERY_LIKE="SELECT TRIM(CUST_REF_ID1) DB_CODE, CUST_NAME DB_VALUE  FROM PM_CUSTOMER, PM_CUST_CLASS	  WHERE CUST_CLASS = CCLAS_CODE"
    		+ "  AND CCLAS_TYPE <> '002'  AND NVL(CUST_FRZ_FLAG, 'N') = 'N'  AND (UPPER(CUST_REF_ID1) LIKE UPPER(?)"
    		+ "  OR UPPER(CUST_NAME) LIKE UPPER(?))  AND ROWNUM <= ? UNION	 SELECT BANK_CODE DB_CODE,BANK_NAME DB_VALUE FROM FM_BANK"
    		+ "	 WHERE  (UPPER(BANK_CODE) LIKE UPPER(?)   OR UPPER(BANK_NAME) LIKE UPPER(?))   AND ROWNUM <= ?";
    		*/
    		
    		/*end*/
    String BANK_REF_ID1_QUERY_LIKE="SELECT TRIM(NVL(CUST_ROC_NO,CUST_REF_ID1 ) ) DB_CODE, CUST_NAME DB_VALUE "
    		+ "FROM PM_CUSTOMER, PM_CUST_CLASS WHERE CUST_CLASS = CCLAS_CODE AND NVL(CUST_FRZ_FLAG, 'N') = 'N' "
    		+ "AND (UPPER(CUST_REF_ID1) LIKE UPPER(?) OR UPPER(CUST_NAME) LIKE UPPER(?) OR UPPER(CUST_ROC_NO) "
    		+ "LIKE UPPER(?)) UNION SELECT BANK_CODE DB_CODE, BANK_NAME DB_VALUE FROM FM_BANK "
    		+ "WHERE (UPPER(BANK_CODE) LIKE UPPER(?) OR UPPER(BANK_NAME) LIKE UPPER(?))";
    
    
}
